{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\src\\\\route\\\\redirect_route.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport { setIsAuthenticate, addAuthenticateMess } from \"../features/authenticate/authenticateSlice\";\nimport sendReqLogin from '../helper/sendReqLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const auth = useSelector(state => state.authenticate.isAuthenticate);\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const sendReqToServer = async () => {\n    const configReq = {\n      method: 'get',\n      url: '/chat',\n      header: \"Content-Type': 'text/plain; charset=utf-8\",\n      data: \"\"\n    };\n    const res = await sendReqLogin(configReq);\n\n    if (res.data.isAuthenticated) {\n      dispatch(setIsAuthenticate(true));\n    } else {\n      dispatch(addAuthenticateMess(res.data.message));\n    }\n  };\n\n  useEffect(() => {\n    sendReqToServer();\n  });\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: auth ? /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReRoute, \"OSTKddw+9jlPtq2UUn80MALqPuU=\", false, function () {\n  return [useSelector, useLocation, useDispatch];\n});\n\n_c = ReRoute;\nexport default ReRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReRoute\");","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/route/redirect_route.js"],"names":["React","useEffect","useDispatch","useSelector","Route","useLocation","setIsAuthenticate","addAuthenticateMess","sendReqLogin","ReRoute","component","Component","rest","auth","state","authenticate","isAuthenticate","location","dispatch","sendReqToServer","configReq","method","url","header","data","res","isAuthenticated","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,QAAqD,4CAArD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,MAAMC,OAAO,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAACC,IAAAA,SAAS,EAAEC,SAAZ;AAAsB,OAAGC;AAAzB,GAAmC;AAChD,QAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,cAA7B,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,eAAe,GAAG,YAAY;AAChC,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,GAAG,EAAE,OAFS;AAGdC,MAAAA,MAAM,EAAE,2CAHM;AAIdC,MAAAA,IAAI,EAAE;AAJQ,KAAlB;AAMA,UAAMC,GAAG,GAAG,MAAMjB,YAAY,CAACY,SAAD,CAA9B;;AACA,QAAGK,GAAG,CAACD,IAAJ,CAASE,eAAZ,EAA6B;AACzBR,MAAAA,QAAQ,CAACZ,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACH,KAFD,MAGK;AACDY,MAAAA,QAAQ,CAACX,mBAAmB,CAACkB,GAAG,CAACD,IAAJ,CAASG,OAAV,CAApB,CAAR;AACH;AACJ,GAdD;;AAeA1B,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,eAAe;AAClB,GAFQ,CAAT;AAGA,sBACI,QAAC,KAAD,OAAWP,IAAX;AAAA,cACKC,IAAI,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7BD;;GAAMJ,O;UACWN,W,EACIE,W,EACAH,W;;;KAHfO,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport {setIsAuthenticate, addAuthenticateMess} from \"../features/authenticate/authenticateSlice\";\r\nimport sendReqLogin from '../helper/sendReqLogin';\r\n\r\nconst ReRoute = ({component: Component,...rest}) => {\r\n    const auth = useSelector(state => state.authenticate.isAuthenticate);\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const sendReqToServer = async () => {\r\n        const configReq = {\r\n            method: 'get',\r\n            url: '/chat',\r\n            header: \"Content-Type': 'text/plain; charset=utf-8\",\r\n            data: \"\"\r\n        }\r\n        const res = await sendReqLogin(configReq);\r\n        if(res.data.isAuthenticated) {\r\n            dispatch(setIsAuthenticate(true))\r\n        }\r\n        else {\r\n            dispatch(addAuthenticateMess(res.data.message))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        sendReqToServer();\r\n    })\r\n    return (\r\n        <Route {...rest}>\r\n            {auth ? <Route ></Route>\r\n                : <Component></Component>\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ReRoute;"]},"metadata":{},"sourceType":"module"}