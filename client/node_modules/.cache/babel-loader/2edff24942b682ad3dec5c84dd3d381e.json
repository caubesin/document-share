{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqToServer';\nexport const getCurrentFile = createAsyncThunk(\"localhost:4000/file/:fileId\", async (id, thunkAPI) => {\n  const configReq = {\n    method: 'get',\n    url: `/file/${id}`,\n    params: {}\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst current = createSlice({\n  name: 'current',\n  initialState: {\n    tabs: 0,\n    file: {\n      _id: null\n    },\n    friend: {\n      _id: null\n    },\n    path: '/',\n    parent: null,\n    isShowInfo: false\n  },\n  reducers: {\n    setTab: (state, action) => {\n      state.tabs = action.payload;\n    },\n    setFile: (state, action) => {\n      state.file = action.payload;\n    },\n    setIsShowInfo: (state, action) => {\n      state.isShowInfo = !state.isShowInfo;\n    },\n    setPath: (state, action) => {\n      state.path = action.payload;\n    },\n    setParent: (state, action) => {\n      state.parent = action.payload;\n    },\n    setFriend: (state, action) => {\n      state.friend = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getCurrentFile.pending, (state, action) => {});\n    builder.addCase(getCurrentFile.fulfilled, (state, action) => {\n      state.file = action.payload;\n    });\n    builder.addCase(getCurrentFile.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  setTab,\n  setFile,\n  setIsShowInfo,\n  setPath,\n  setFriend,\n  setParent\n} = current.actions;\nexport default current.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/currentSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","getCurrentFile","id","thunkAPI","configReq","method","url","params","res","data","current","name","initialState","tabs","file","_id","friend","path","parent","isShowInfo","reducers","setTab","state","action","payload","setFile","setIsShowInfo","setPath","setParent","setFriend","extraReducers","builder","addCase","pending","fulfilled","rejected","console","log","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport sendReq from '../helper/sendReqToServer'\r\n\r\nexport const getCurrentFile = createAsyncThunk(\r\n    \"localhost:4000/file/:fileId\",\r\n    async (id, thunkAPI) => {\r\n        const configReq = {\r\n            method: 'get',\r\n            url: `/file/${id}`,\r\n            params : {\r\n                \r\n            }\r\n        }\r\n        const res = await sendReq(configReq);\r\n        return res.data;\r\n    }\r\n)\r\n\r\nconst current = createSlice({\r\n    name: 'current',\r\n    initialState: {\r\n        tabs : 0,\r\n        file : {\r\n            _id: null\r\n        },\r\n        friend: {\r\n            _id: null\r\n        },\r\n        path: '/',\r\n        parent: null,\r\n        isShowInfo: false\r\n    },\r\n    reducers: {\r\n        setTab : (state, action) => {\r\n            state.tabs = action.payload\r\n        },\r\n        setFile : (state, action) => {\r\n            state.file = action.payload\r\n        },\r\n        setIsShowInfo : (state, action) => {\r\n            state.isShowInfo = !state.isShowInfo;\r\n        },\r\n        setPath : (state, action) => {\r\n            state.path = action.payload;\r\n        },\r\n        setParent : (state, action) => {\r\n            state.parent = action.payload;\r\n        },\r\n        setFriend : (state, action) => {\r\n            state.friend = action.payload;\r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(getCurrentFile.pending, (state, action) => {\r\n\r\n        })\r\n        builder.addCase(getCurrentFile.fulfilled, (state, action) => {\r\n            state.file = action.payload;\r\n        })\r\n        builder.addCase(getCurrentFile.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setTab, setFile, setIsShowInfo, setPath, setFriend, setParent} = current.actions;\r\nexport default current.reducer;"]},"metadata":{},"sourceType":"module"}