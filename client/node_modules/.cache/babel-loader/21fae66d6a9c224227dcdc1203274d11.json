{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqLogin';\nexport const sendReqToServer = createAsyncThunk(\"Req Login to Server\", async (configReq, thunkAPI) => {\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst authenticate = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isLoading: false\n  },\n  reducers: {\n    setStateAuth: (state, action) => {\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.message = action.payload.mess;\n    },\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(sendReqToServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  setStateAuth,\n  setIsLoading\n} = authenticate.actions;\nexport default authenticate.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/authenticateSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","sendReqToServer","configReq","thunkAPI","res","data","authenticate","name","initialState","isLoading","reducers","setStateAuth","state","action","isAuthenticated","payload","message","mess","setIsLoading","extraReducers","builder","addCase","fulfilled","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAC3C,qBAD2C,EAE3C,OAAOI,SAAP,EAAkBC,QAAlB,KAA+B;AAC3B,QAAMC,GAAG,GAAG,MAAMJ,OAAO,CAACE,SAAD,CAAzB;AACA,SAAOE,GAAG,CAACC,IAAX;AACH,CAL0C,CAAxC;AAQP,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,cADuB;AAE7BC,EAAAA,YAAY,EAAE;AAEVC,IAAAA,SAAS,EAAG;AAFF,GAFe;AAM7BC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,YAAY,EAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACE,eAAN,GAAwBD,MAAM,CAACE,OAAP,CAAeD,eAAvC;AACAF,MAAAA,KAAK,CAACI,OAAN,GAAgBH,MAAM,CAACE,OAAP,CAAeE,IAA/B;AACH,KAJM;AAKPC,IAAAA,YAAY,EAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACE,OAAzB;AACH;AAPM,GANkB;AAe7BI,EAAAA,aAAa,EAAIC,OAAD,IAAa;AACzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBpB,eAAe,CAACqB,SAAhC,EAA2C,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC1DD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACH,KAFD;AAGH;AAnB4B,CAAD,CAAhC;AAsBA,OAAO,MAAM;AAACE,EAAAA,YAAD;AAAeO,EAAAA;AAAf,IAA+BZ,YAAY,CAACiB,OAAlD;AACP,eAAejB,YAAY,CAACkB,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport sendReq from '../helper/sendReqLogin'\r\n\r\nexport const sendReqToServer = createAsyncThunk(\r\n    \"Req Login to Server\",\r\n    async (configReq, thunkAPI) => {\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nconst authenticate = createSlice({\r\n    name: \"authenticate\",\r\n    initialState: {\r\n        \r\n        isLoading : false\r\n    },\r\n    reducers : {\r\n        setStateAuth : (state, action) => {\r\n            state.isAuthenticated = action.payload.isAuthenticated;\r\n            state.message = action.payload.mess\r\n        },\r\n        setIsLoading : (state, action) => {\r\n            state.isLoading = action.payload\r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(sendReqToServer.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setStateAuth, setIsLoading} = authenticate.actions;\r\nexport default authenticate.reducer;"]},"metadata":{},"sourceType":"module"}