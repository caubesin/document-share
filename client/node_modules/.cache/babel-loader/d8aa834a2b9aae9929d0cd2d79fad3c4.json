{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\src\\\\route\\\\redirect_route.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\nimport { sendReqReLogin } from \"../features/authenticateSlice\";\nimport Loading from \"../component/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const params = useParams();\n  const [renderEl, setRenderEl] = useState( /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 47\n  }, this));\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(sendReqReLogin()).then(action => {\n      if (action.meta.requestStatus === \"rejected\") {\n        navigate('/error');\n      } else if (action.payload.isAuthenticated) {\n        navigate(`/main${params.path ? params.path : \"\"}`);\n      } else {\n        setRenderEl(children);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderEl\n  }, void 0, false);\n};\n\n_s(ReRoute, \"J8XUo5i2Byd3FuoVQOF17lKSC/w=\", false, function () {\n  return [useParams, useNavigate, useDispatch];\n});\n\n_c = ReRoute;\nexport default ReRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReRoute\");","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/route/redirect_route.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Navigate","useParams","useNavigate","sendReqReLogin","Loading","ReRoute","children","params","renderEl","setRenderEl","navigate","dispatch","then","action","meta","requestStatus","payload","isAuthenticated","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,kBAAjD;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC5B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM,CAACO,QAAD,EAAYC,WAAZ,IAA2BZ,QAAQ,eAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAD,CAAzC;AACA,QAAMa,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGb,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR,CAA2BS,IAA3B,CAAiCC,MAAD,IAAY;AACxC,UAAGA,MAAM,CAACC,IAAP,CAAYC,aAAZ,KAA8B,UAAjC,EAA6C;AACzCL,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,OAFD,MAGK,IAAGG,MAAM,CAACG,OAAP,CAAeC,eAAlB,EAAmC;AACpCP,QAAAA,QAAQ,CAAE,QAAOH,MAAM,CAACW,IAAP,GAAcX,MAAM,CAACW,IAArB,GAA4B,EAAG,EAAxC,CAAR;AACH,OAFI,MAGA;AACDT,QAAAA,WAAW,CAACH,QAAD,CAAX;AACH;AACJ,KAVD;AAWH,GAZQ,EAYP,EAZO,CAAT;AAaA,sBACI;AAAA,cACKE;AADL,mBADJ;AAKH,CAvBD;;GAAMH,O;UACaJ,S,EAEEC,W,EACAJ,W;;;KAJfO,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React, {useEffect,useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport { sendReqReLogin } from \"../features/authenticateSlice\";\r\nimport Loading from \"../component/loading\";\r\n\r\nconst ReRoute = ({children}) => {\r\n    const params = useParams();\r\n    const [renderEl,  setRenderEl] = useState(<Loading></Loading>);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(sendReqReLogin()).then((action) => {\r\n            if(action.meta.requestStatus === \"rejected\") {\r\n                navigate('/error')\r\n            }\r\n            else if(action.payload.isAuthenticated) {\r\n                navigate(`/main${params.path ? params.path : \"\"}`)\r\n            }\r\n            else {\r\n                setRenderEl(children);\r\n            }\r\n        });\r\n    },[])\r\n    return (\r\n        <>\r\n            {renderEl}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReRoute;"]},"metadata":{},"sourceType":"module"}