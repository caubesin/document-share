{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqToServer';\nexport const getUserData = createAsyncThunk(\"localhost:4000/user\", async (configReq, thunkAPI) => {\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst user = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: false,\n    user: null,\n    own_file\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUserData.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(getUserData.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoading = false;\n      console.log(state.user);\n    });\n  }\n});\nexport const {} = user.actions;\nexport default user.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/userSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","getUserData","configReq","thunkAPI","res","data","user","name","initialState","isLoading","own_file","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","console","log","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACvC,qBADuC,EAEvC,OAAOI,SAAP,EAAkBC,QAAlB,KAA+B;AAC3B,QAAMC,GAAG,GAAG,MAAMJ,OAAO,CAACE,SAAD,CAAzB;AACA,SAAOE,GAAG,CAACC,IAAX;AACH,CALsC,CAApC;AAQP,MAAMC,IAAI,GAAGP,WAAW,CAAC;AACrBQ,EAAAA,IAAI,EAAE,MADe;AAErBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,KADD;AAEVH,IAAAA,IAAI,EAAG,IAFG;AAGVI,IAAAA;AAHU,GAFO;AAOrBC,EAAAA,QAAQ,EAAE,EAPW;AAUrBC,EAAAA,aAAa,EAAIC,OAAD,IAAa;AACzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,WAAW,CAACc,OAA5B,EAAqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACH,KAFD;AAGAI,IAAAA,OAAO,CAACC,OAAR,CAAgBb,WAAW,CAACiB,SAA5B,EAAuC,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACV,IAAlB;AACH,KAJD;AAKH;AAnBoB,CAAD,CAAxB;AAsBA,OAAO,MAAM,KAAKA,IAAI,CAACgB,OAAhB;AACP,eAAehB,IAAI,CAACiB,OAApB","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport sendReq from '../helper/sendReqToServer'\r\n\r\nexport const getUserData = createAsyncThunk(\r\n    \"localhost:4000/user\",\r\n    async (configReq, thunkAPI) => {\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nconst user = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        isLoading: false,\r\n        user : null,\r\n        own_file\r\n    },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(getUserData.pending, (state, action) => {\r\n            state.isLoading = true\r\n        })\r\n        builder.addCase(getUserData.fulfilled, (state, action) => {\r\n            state.user = action.payload\r\n            state.isLoading = false\r\n            console.log(state.user)\r\n        })\r\n    }\r\n})\r\n\r\nexport const {} = user.actions;\r\nexport default user.reducer;"]},"metadata":{},"sourceType":"module"}