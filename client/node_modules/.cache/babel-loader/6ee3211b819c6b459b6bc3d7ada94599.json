{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\src\\\\route\\\\redirect_route.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { setStateAuth, setIsLoading } from \"../features/authenticateSlice\";\nimport Loading from '../component/loading';\nimport { sendReqToServer } from \"../features/authenticateSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const auth = useSelector(state => state.authenticate);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.authenticate.isLoading);\n\n  const sendReqLogin = async () => {\n    const configReq = {\n      method: 'get',\n      url: '/',\n      header: \"Content-Type': 'text/plain; charset=utf-8\",\n      data: \"\"\n    };\n    dispatch(setIsLoading(true));\n    const res = dispatch(sendReqToServer(configReq));\n    dispatch(setStateAuth(res));\n  };\n\n  React.useEffect(() => {\n    sendReqLogin();\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this) : auth ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/document\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 50\n  }, this) : children;\n};\n\n_s(ReRoute, \"v5hgDT+N9hVHsSxiDkRw/7MiFOs=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ReRoute;\nexport default ReRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReRoute\");","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/route/redirect_route.js"],"names":["React","useDispatch","useSelector","Navigate","setStateAuth","setIsLoading","Loading","sendReqToServer","ReRoute","children","auth","state","authenticate","dispatch","isLoading","sendReqLogin","configReq","method","url","header","data","res","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,+BAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,eAAT,QAAgC,+BAAhC;;;AAEA,MAAMC,OAAO,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC5B,QAAMC,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBE,SAA7B,CAA7B;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC7B,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,GAAG,EAAE,GAFS;AAGdC,MAAAA,MAAM,EAAE,2CAHM;AAIdC,MAAAA,IAAI,EAAE;AAJQ,KAAlB;AAMAP,IAAAA,QAAQ,CAACR,YAAY,CAAC,IAAD,CAAb,CAAR;AACA,UAAMgB,GAAG,GAAGR,QAAQ,CAACN,eAAe,CAACS,SAAD,CAAhB,CAApB;AACAH,IAAAA,QAAQ,CAACT,YAAY,CAACiB,GAAD,CAAb,CAAR;AACH,GAVD;;AAYArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AAClBP,IAAAA,YAAY;AACf,GAFD,EAEE,EAFF;AAIA,SACID,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAyBJ,IAAI,gBAAG,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAH,GAAgCD,QAD1E;AAGH,CAxBD;;GAAMD,O;UACWN,W,EACID,W,EACCC,W;;;KAHhBM,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {setStateAuth, setIsLoading} from \"../features/authenticateSlice\";\r\nimport Loading from '../component/loading';\r\nimport { sendReqToServer } from \"../features/authenticateSlice\";\r\n\r\nconst ReRoute = ({children}) => {\r\n    const auth = useSelector((state) => state.authenticate);\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(state => state.authenticate.isLoading)\r\n\r\n    const sendReqLogin = async () => {\r\n        const configReq = {\r\n            method: 'get',\r\n            url: '/',\r\n            header: \"Content-Type': 'text/plain; charset=utf-8\",\r\n            data: \"\"\r\n        }\r\n        dispatch(setIsLoading(true))\r\n        const res = dispatch(sendReqToServer(configReq));\r\n        dispatch(setStateAuth(res))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        sendReqLogin()\r\n    },[])\r\n\r\n    return (\r\n        isLoading ? <Loading></Loading> : auth ? <Navigate to=\"/document\"/> : children\r\n    )\r\n}\r\n\r\nexport default ReRoute;"]},"metadata":{},"sourceType":"module"}