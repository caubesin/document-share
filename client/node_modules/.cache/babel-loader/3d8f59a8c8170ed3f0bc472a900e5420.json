{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqLogin';\nconst sendReqToServer = createAsyncThunk(\"Req Login to Server\", async (configReq, thunkAPI) => {\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst authenticate = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    message: {\n      type: \"error\",\n      mess: null\n    },\n    isLoading: false\n  },\n  reducers: {\n    setStateAuth: (state, action) => {\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.message = action.payload.mess;\n    },\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(sendReqToServer.fulfilled, (state, action) => {\n      state.isLoading = true;\n      se;\n    });\n  }\n});\nexport const {\n  setIsAuthenticate,\n  addAuthenticateMess\n} = authenticate.actions;\nexport default authenticate.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/authenticateSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","sendReqToServer","configReq","thunkAPI","res","data","authenticate","name","initialState","isAuthenticated","message","type","mess","isLoading","reducers","setStateAuth","state","action","payload","setIsLoading","extraReducers","builder","addCase","fulfilled","se","setIsAuthenticate","addAuthenticateMess","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,eAAe,GAAGH,gBAAgB,CACpC,qBADoC,EAEpC,OAAOI,SAAP,EAAkBC,QAAlB,KAA+B;AAC3B,QAAMC,GAAG,GAAG,MAAMJ,OAAO,CAACE,SAAD,CAAzB;AACA,SAAOE,GAAG,CAACC,IAAX;AACH,CALmC,CAAxC;AAQA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,cADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,eAAe,EAAE,KADP;AAEVC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,IAAI,EAAE;AAFD,KAFC;AAMVC,IAAAA,SAAS,EAAG;AANF,GAFe;AAU7BC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,YAAY,EAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACP,eAAN,GAAwBQ,MAAM,CAACC,OAAP,CAAeT,eAAvC;AACAO,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeN,IAA/B;AACH,KAJM;AAKPO,IAAAA,YAAY,EAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACH;AAPM,GAVkB;AAmB7BE,EAAAA,aAAa,EAAIC,OAAD,IAAa;AACzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,eAAe,CAACsB,SAAhC,EAA2C,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC1DD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACAW,MAAAA,EAAE;AACL,KAHD;AAIH;AAxB4B,CAAD,CAAhC;AA2BA,OAAO,MAAM;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA;AAApB,IAA2CpB,YAAY,CAACqB,OAA9D;AACP,eAAerB,YAAY,CAACsB,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport sendReq from '../helper/sendReqLogin'\r\n\r\nconst sendReqToServer = createAsyncThunk(\r\n    \"Req Login to Server\",\r\n    async (configReq, thunkAPI) => {\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nconst authenticate = createSlice({\r\n    name: \"authenticate\",\r\n    initialState: {\r\n        isAuthenticated: false,\r\n        message: {\r\n            type: \"error\",\r\n            mess: null\r\n        },\r\n        isLoading : false\r\n    },\r\n    reducers : {\r\n        setStateAuth : (state, action) => {\r\n            state.isAuthenticated = action.payload.isAuthenticated;\r\n            state.message = action.payload.mess\r\n        },\r\n        setIsLoading : (state, action) => {\r\n            state.isLoading = action.payload\r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(sendReqToServer.fulfilled, (state, action) => {\r\n            state.isLoading = true\r\n            se\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setIsAuthenticate, addAuthenticateMess} = authenticate.actions;\r\nexport default authenticate.reducer;"]},"metadata":{},"sourceType":"module"}