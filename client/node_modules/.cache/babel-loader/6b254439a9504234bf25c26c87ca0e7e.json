{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqToServer';\nexport const setCurrentFile = createAsyncThunk(\"localhost:4000/file/:fileId\", async (id, thunkAPI) => {\n  const configReq = {\n    method: 'get',\n    url: `/file/${id}`\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst current = createSlice({\n  name: 'current',\n  initialState: {\n    tabs: 0,\n    file: {\n      _id: null\n    },\n    isShowInfo: false\n  },\n  reducers: {\n    setTab: (state, action) => {\n      state.tabs = action.payload;\n    },\n    setFile: (state, action) => {\n      state.file = action.payload;\n    },\n    setIsShowInfo: (state, action) => {\n      state.isShowInfo = ac;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(setCurrentFile.pending, (state, action) => {});\n    builder.addCase(setCurrentFile.fulfilled, (state, action) => {\n      state.file = action.payload;\n    });\n  }\n});\nexport const {\n  setTab,\n  setFile,\n  setIsShowInfo\n} = current.actions;\nexport default current.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/currentSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","setCurrentFile","id","thunkAPI","configReq","method","url","res","data","current","name","initialState","tabs","file","_id","isShowInfo","reducers","setTab","state","action","payload","setFile","setIsShowInfo","ac","extraReducers","builder","addCase","pending","fulfilled","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC1C,6BAD0C,EAE1C,OAAOI,EAAP,EAAWC,QAAX,KAAwB;AACpB,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,GAAG,EAAG,SAAQJ,EAAG;AAFH,GAAlB;AAIA,QAAMK,GAAG,GAAG,MAAMP,OAAO,CAACI,SAAD,CAAzB;AACA,SAAOG,GAAG,CAACC,IAAX;AACH,CATyC,CAAvC;AAYP,MAAMC,OAAO,GAAGV,WAAW,CAAC;AACxBW,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAG,CADG;AAEVC,IAAAA,IAAI,EAAG;AACHC,MAAAA,GAAG,EAAE;AADF,KAFG;AAKVC,IAAAA,UAAU,EAAE;AALF,GAFU;AASxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;AACH,KAHK;AAINC,IAAAA,OAAO,EAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACH,KANK;AAONE,IAAAA,aAAa,EAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACH,UAAN,GAAmBQ,EAAnB;AAEH;AAVK,GATc;AAqBxBC,EAAAA,aAAa,EAAIC,OAAD,IAAa;AACzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,cAAc,CAAC0B,OAA/B,EAAwC,CAACT,KAAD,EAAQC,MAAR,KAAmB,CAE1D,CAFD;AAGAM,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,cAAc,CAAC2B,SAA/B,EAA0C,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACzDD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACH,KAFD;AAGH;AA5BuB,CAAD,CAA3B;AA+BA,OAAO,MAAM;AAACH,EAAAA,MAAD;AAASI,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,IAAmCb,OAAO,CAACoB,OAAjD;AACP,eAAepB,OAAO,CAACqB,OAAvB","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport sendReq from '../helper/sendReqToServer'\r\n\r\nexport const setCurrentFile = createAsyncThunk(\r\n    \"localhost:4000/file/:fileId\",\r\n    async (id, thunkAPI) => {\r\n        const configReq = {\r\n            method: 'get',\r\n            url: `/file/${id}`\r\n        }\r\n        const res = await sendReq(configReq);\r\n        return res.data;\r\n    }\r\n)\r\n\r\nconst current = createSlice({\r\n    name: 'current',\r\n    initialState: {\r\n        tabs : 0,\r\n        file : {\r\n            _id: null\r\n        },\r\n        isShowInfo: false\r\n    },\r\n    reducers: {\r\n        setTab : (state, action) => {\r\n            state.tabs = action.payload\r\n        },\r\n        setFile : (state, action) => {\r\n            state.file = action.payload\r\n        },\r\n        setIsShowInfo : (state, action) => {\r\n            state.isShowInfo = ac;\r\n            \r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(setCurrentFile.pending, (state, action) => {\r\n\r\n        })\r\n        builder.addCase(setCurrentFile.fulfilled, (state, action) => {\r\n            state.file = action.payload;\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setTab, setFile, setIsShowInfo} = current.actions;\r\nexport default current.reducer;"]},"metadata":{},"sourceType":"module"}