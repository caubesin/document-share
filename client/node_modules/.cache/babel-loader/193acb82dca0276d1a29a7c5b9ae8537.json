{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqToServer';\nexport const getUserData = createAsyncThunk(\"localhost:4000/user\", async thunkAPI => {\n  const configReq = {\n    method: 'get',\n    url: '/user',\n    header: {\n      \"Content-Type\": \"text/plain\"\n    },\n    data: \"\"\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nexport const getFriend = createAsyncThunk(\"localhost:4000/user/friend\", async (_ref, thunkAPI) => {\n  let {\n    type,\n    page\n  } = _ref;\n  const configReq = {\n    method: 'get',\n    url: '/user/friend',\n    header: {\n      \"Content-Type\": \"text/plain\"\n    },\n    params: {\n      type: type,\n      page: page\n    }\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nexport const handleFriend = createAsyncThunk(\"localhost:4000/user/friend/handle\", async (_ref2, thunkAPI) => {\n  let {\n    type,\n    id\n  } = _ref2;\n  console.log(type, id);\n  const configReq = {\n    method: 'get',\n    url: '/user/friend/handle',\n    header: {\n      \"Content-Type\": \"text/plain\"\n    },\n    params: {\n      type: type,\n      id: id\n    }\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nexport const findFriend = createAsyncThunk(\"localhost:4000/user/friend/find\", async (id, thunkAPI) => {\n  const configReq = {\n    method: 'get',\n    url: '/user/friend/find',\n    header: {\n      \"Content-Type\": \"text/plain\"\n    },\n    params: {\n      id: id\n    }\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst user = createSlice({\n  name: \"user\",\n  initialState: {\n    user: {\n      isLoad: false,\n      user_info: null\n    },\n    friend: {\n      isLoad: true,\n      friend: [],\n      findFriendRes: null,\n      message: \"\"\n    }\n  },\n  reducers: {\n    setNullFindFriendRes: (state, action) => {\n      state.friend.findFriendRes = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getUserData.pending, (state, action) => {\n      state.user.isLoad = true;\n    });\n    builder.addCase(getUserData.fulfilled, (state, action) => {\n      state.user.user_info = action.payload;\n      state.user.isLoad = false;\n    });\n    builder.addCase(getUserData.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n    builder.addCase(getFriend.pending, (state, action) => {\n      state.friend.isLoad = true;\n    });\n    builder.addCase(getFriend.fulfilled, (state, action) => {\n      state.friend = { ...state.friend,\n        isLoad: false,\n        friend: action.payload\n      };\n    });\n    builder.addCase(getFriend.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n    builder.addCase(handleFriend.pending, (state, action) => {\n      state.friend.isLoad = true;\n    });\n    builder.addCase(handleFriend.fulfilled, (state, action) => {\n      if (action.payload.length !== 0) {\n        state.friend.isLoad = false;\n        state.friend.message = action.payload;\n      }\n    });\n    builder.addCase(handleFriend.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n    builder.addCase(findFriend.fulfilled, (state, action) => {\n      state.friend.findFriendRes = action.payload;\n    });\n    builder.addCase(findFriend.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  setNullFindFriendRes\n} = user.actions;\nexport default user.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/userSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","getUserData","thunkAPI","configReq","method","url","header","data","res","getFriend","type","page","params","handleFriend","id","console","log","findFriend","user","name","initialState","isLoad","user_info","friend","findFriendRes","message","reducers","setNullFindFriendRes","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","length","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport sendReq from '../helper/sendReqToServer'\r\n\r\nexport const getUserData = createAsyncThunk(\r\n    \"localhost:4000/user\",\r\n    async (thunkAPI) => {\r\n        const configReq = {\r\n            method: 'get',\r\n            url: '/user',\r\n            header: {\r\n                \"Content-Type\": \"text/plain\"\r\n            },\r\n            data: \"\"\r\n        }\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nexport const getFriend = createAsyncThunk(\r\n    \"localhost:4000/user/friend\",\r\n    async ({type, page},thunkAPI)  => {\r\n        const configReq = {\r\n            method: 'get',\r\n                url: '/user/friend',\r\n                header: {\r\n                    \"Content-Type\": \"text/plain\"\r\n                },\r\n                params: {\r\n                    type: type,\r\n                    page: page\r\n                }\r\n        }\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nexport const handleFriend = createAsyncThunk(\r\n    \"localhost:4000/user/friend/handle\",\r\n    async ({type, id},thunkAPI)  => {\r\n        console.log(type, id)\r\n        const configReq = {\r\n            method: 'get',\r\n                url: '/user/friend/handle',\r\n                header: {\r\n                    \"Content-Type\": \"text/plain\"\r\n                },\r\n                params: {\r\n                    type: type,\r\n                    id: id\r\n                }\r\n        }\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nexport const findFriend = createAsyncThunk(\r\n    \"localhost:4000/user/friend/find\",\r\n    async (id,thunkAPI)  => {\r\n        const configReq = {\r\n            method: 'get',\r\n                url: '/user/friend/find',\r\n                header: {\r\n                    \"Content-Type\": \"text/plain\"\r\n                },\r\n                params: {\r\n                    id: id\r\n                }\r\n        }\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nconst user = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        user : {\r\n            isLoad: false,\r\n            user_info: null\r\n        },\r\n        friend: {\r\n            isLoad: true,\r\n            friend: [],\r\n            findFriendRes: null,\r\n            message: \"\"\r\n        }\r\n    },\r\n    reducers: {\r\n        setNullFindFriendRes : (state, action) => {\r\n            state.friend.findFriendRes = null\r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(getUserData.pending, (state, action) => {\r\n            state.user.isLoad = true\r\n        })\r\n        builder.addCase(getUserData.fulfilled, (state, action) => {\r\n            state.user.user_info = action.payload\r\n            state.user.isLoad = false\r\n        })\r\n        builder.addCase(getUserData.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n        })\r\n\r\n        builder.addCase(getFriend.pending, (state, action) => {\r\n            state.friend.isLoad = true\r\n        })\r\n        builder.addCase(getFriend.fulfilled, (state, action) => {\r\n            state.friend = {\r\n                ...state.friend,\r\n                isLoad: false,\r\n                friend: action.payload\r\n            }\r\n        })\r\n        builder.addCase(getFriend.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n        })\r\n\r\n        builder.addCase(handleFriend.pending, (state, action) => {\r\n            state.friend.isLoad = true\r\n        })\r\n        builder.addCase(handleFriend.fulfilled, (state, action) => {\r\n            if(action.payload.length !== 0) {\r\n                state.friend.isLoad = false\r\n                state.friend.message = action.payload\r\n            }\r\n        })\r\n        builder.addCase(handleFriend.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n        })\r\n\r\n        builder.addCase(findFriend.fulfilled, (state, action) => {\r\n            state.friend.findFriendRes = action.payload\r\n        })\r\n        builder.addCase(findFriend.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const {setNullFindFriendRes} = user.actions;\r\nexport default user.reducer;"]},"metadata":{},"sourceType":"module"}