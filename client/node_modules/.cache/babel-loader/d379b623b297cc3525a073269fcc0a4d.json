{"ast":null,"code":"import _asyncToGenerator from\"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import sendReq from'../helper/sendReqToServer';export var sendReqToServer=createAsyncThunk(\"localhost:4000\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(configReq,thunkAPI){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return sendReq(configReq);case 2:res=_context.sent;return _context.abrupt(\"return\",res.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());var authenticate=createSlice({name:\"authenticate\",initialState:{auth:{isAuthenticated:false,message:{type:null,mess:null}},isLoading:false},reducers:{setMess:function setMess(state,action){state.auth.message={type:action.payload.type,mess:action.payload.mess};},setIsLoad:function setIsLoad(state,action){state.isLoading=action.payload;}},extraReducers:function extraReducers(builder){builder.addCase(sendReqToServer.pending,function(state,action){state.isLoading=true;});builder.addCase(sendReqToServer.fulfilled,function(state,action){if(state.auth!==action.payload.isAuthenticated){state.auth=action.payload;}else{state.auth.message=action.payload.message;}state.isLoading=false;});}});var _authenticate$actions=authenticate.actions,setMess=_authenticate$actions.setMess,setIsLoad=_authenticate$actions.setIsLoad;export{setMess,setIsLoad};export default authenticate.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/authenticateSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","sendReqToServer","configReq","thunkAPI","res","data","authenticate","name","initialState","auth","isAuthenticated","message","type","mess","isLoading","reducers","setMess","state","action","payload","setIsLoad","extraReducers","builder","addCase","pending","fulfilled","actions","reducer"],"mappings":"4QAAA,OAAQA,gBAAR,CAA0BC,WAA1B,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGH,gBAAgB,CAC3C,gBAD2C,0FAE3C,iBAAOI,SAAP,CAAkBC,QAAlB,gJACsBH,CAAAA,OAAO,CAACE,SAAD,CAD7B,QACUE,GADV,+CAEWA,GAAG,CAACC,IAFf,wDAF2C,mEAAxC,CAQP,GAAMC,CAAAA,YAAY,CAAGP,WAAW,CAAC,CAC7BQ,IAAI,CAAE,cADuB,CAE7BC,YAAY,CAAE,CACVC,IAAI,CAAG,CACHC,eAAe,CAAE,KADd,CAEHC,OAAO,CAAE,CACLC,IAAI,CAAE,IADD,CAELC,IAAI,CAAE,IAFD,CAFN,CADG,CAQVC,SAAS,CAAG,KARF,CAFe,CAY7BC,QAAQ,CAAG,CACPC,OAAO,CAAG,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CACzBD,KAAK,CAACR,IAAN,CAAWE,OAAX,CAAqB,CACjBC,IAAI,CAAEM,MAAM,CAACC,OAAP,CAAeP,IADJ,CAEjBC,IAAI,CAAEK,MAAM,CAACC,OAAP,CAAeN,IAFJ,CAArB,CAIH,CANM,CAOPO,SAAS,CAAG,mBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC3BD,KAAK,CAACH,SAAN,CAAkBI,MAAM,CAACC,OAAzB,CACH,CATM,CAZkB,CAuB7BE,aAAa,CAAG,uBAACC,OAAD,CAAa,CACzBA,OAAO,CAACC,OAAR,CAAgBtB,eAAe,CAACuB,OAAhC,CAAyC,SAACP,KAAD,CAAQC,MAAR,CAAmB,CACxDD,KAAK,CAACH,SAAN,CAAkB,IAAlB,CACH,CAFD,EAGAQ,OAAO,CAACC,OAAR,CAAgBtB,eAAe,CAACwB,SAAhC,CAA2C,SAACR,KAAD,CAAQC,MAAR,CAAmB,CAC1D,GAAGD,KAAK,CAACR,IAAN,GAAeS,MAAM,CAACC,OAAP,CAAeT,eAAjC,CAAkD,CAC9CO,KAAK,CAACR,IAAN,CAAaS,MAAM,CAACC,OAApB,CACH,CAFD,IAGK,CACDF,KAAK,CAACR,IAAN,CAAWE,OAAX,CAAqBO,MAAM,CAACC,OAAP,CAAeR,OAApC,CACH,CACDM,KAAK,CAACH,SAAN,CAAkB,KAAlB,CACH,CARD,EASH,CApC4B,CAAD,CAAhC,CAuCO,0BAA6BR,YAAY,CAACoB,OAA1C,CAAOV,OAAP,uBAAOA,OAAP,CAAgBI,SAAhB,uBAAgBA,SAAhB,C,0BACP,cAAed,CAAAA,YAAY,CAACqB,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport sendReq from '../helper/sendReqToServer'\r\n\r\nexport const sendReqToServer = createAsyncThunk(\r\n    \"localhost:4000\",\r\n    async (configReq, thunkAPI) => {\r\n        const res = await sendReq(configReq)\r\n        return res.data\r\n    }\r\n)\r\n\r\nconst authenticate = createSlice({\r\n    name: \"authenticate\",\r\n    initialState: {\r\n        auth : {\r\n            isAuthenticated: false,\r\n            message: {\r\n                type: null,\r\n                mess: null\r\n            }\r\n        },\r\n        isLoading : false\r\n    },\r\n    reducers : {\r\n        setMess : (state, action) => {\r\n            state.auth.message = {\r\n                type: action.payload.type,\r\n                mess: action.payload.mess\r\n            }\r\n        },\r\n        setIsLoad : (state, action) => {\r\n            state.isLoading = action.payload\r\n        }\r\n    },\r\n    extraReducers : (builder) => {\r\n        builder.addCase(sendReqToServer.pending, (state, action) => {\r\n            state.isLoading = true;\r\n        })\r\n        builder.addCase(sendReqToServer.fulfilled, (state, action) => {\r\n            if(state.auth !== action.payload.isAuthenticated) {\r\n                state.auth = action.payload\r\n            }\r\n            else {\r\n                state.auth.message = action.payload.message\r\n            }\r\n            state.isLoading = false;\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setMess, setIsLoad} = authenticate.actions;\r\nexport default authenticate.reducer;"]},"metadata":{},"sourceType":"module"}