{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sendReq from '../helper/sendReqToServer';\nexport const upLoadFile = createAsyncThunk(\"localhost:4000/upload\", async (data, thunkAPI) => {\n  const formData = new FormData();\n  formData.append(\"file\", data, data.name);\n  const configReq = {\n    method: 'post',\n    url: '/upload',\n    header: {},\n    data: data\n  };\n  const res = await sendReq(configReq);\n  return res.data;\n});\nexport const downLoadFile = createAsyncThunk(\"localhost:4000/download\", async (configReq, thunkAPI) => {\n  const res = await sendReq(configReq);\n  return res.data;\n});\nconst file = createSlice({\n  name: \"file\",\n  initialState: {\n    file: null,\n    message: {\n      type: null,\n      mess: null\n    },\n    isLoading: false\n  },\n  reducers: {\n    setMessage: (state, action) => {\n      state.message = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(upLoadFile.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(upLoadFile.fulfilled, (state, action) => {\n      state.message = action.payload.message;\n      state.isLoading = false;\n      console.log(state.message);\n    });\n    builder.addCase(downLoadFile.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(downLoadFile.fulfilled, (state, action) => {\n      state.file = action.payload.file;\n      state.message = action.payload.message;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  setMessage\n} = file.actions;\nexport default file.reducer;","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/features/fileSlice.js"],"names":["createAsyncThunk","createSlice","sendReq","upLoadFile","data","thunkAPI","formData","FormData","append","name","configReq","method","url","header","res","downLoadFile","file","initialState","message","type","mess","isLoading","reducers","setMessage","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","console","log","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACtC,uBADsC,EAEtC,OAAOI,IAAP,EAAaC,QAAb,KAA0B;AACtB,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CACI,MADJ,EAEIJ,IAFJ,EAGIA,IAAI,CAACK,IAHT;AAKA,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,GAAG,EAAE,SAFS;AAGdC,IAAAA,MAAM,EAAE,EAHM;AAIdT,IAAAA,IAAI,EAAEA;AAJQ,GAAlB;AAMA,QAAMU,GAAG,GAAG,MAAMZ,OAAO,CAACQ,SAAD,CAAzB;AACA,SAAOI,GAAG,CAACV,IAAX;AACH,CAjBqC,CAAnC;AAoBP,OAAO,MAAMW,YAAY,GAAGf,gBAAgB,CACxC,yBADwC,EAExC,OAAOU,SAAP,EAAkBL,QAAlB,KAA+B;AAC3B,QAAMS,GAAG,GAAG,MAAMZ,OAAO,CAACQ,SAAD,CAAzB;AACA,SAAOI,GAAG,CAACV,IAAX;AACH,CALuC,CAArC;AAQP,MAAMY,IAAI,GAAGf,WAAW,CAAC;AACrBQ,EAAAA,IAAI,EAAE,MADe;AAErBQ,EAAAA,YAAY,EAAE;AACVD,IAAAA,IAAI,EAAE,IADI;AAEVE,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,IAAI,EAAE;AAFD,KAFC;AAMVC,IAAAA,SAAS,EAAE;AAND,GAFO;AAUrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAvB;AACH;AAHK,GAVW;AAerBC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgB1B,UAAU,CAAC2B,OAA3B,EAAoC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACH,KAFD;AAGAO,IAAAA,OAAO,CAACC,OAAR,CAAgB1B,UAAU,CAAC4B,SAA3B,EAAsC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeR,OAA/B;AACAM,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACN,OAAlB;AACH,KAJD;AAKAU,IAAAA,OAAO,CAACC,OAAR,CAAgBd,YAAY,CAACe,OAA7B,EAAsC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACH,KAFD;AAGAO,IAAAA,OAAO,CAACC,OAAR,CAAgBd,YAAY,CAACgB,SAA7B,EAAwC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACvDD,MAAAA,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAAP,CAAeV,IAA5B;AACAQ,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeR,OAA/B;AACAM,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACH,KAJD;AAKH;AAhCoB,CAAD,CAAxB;AAmCA,OAAO,MAAM;AAACE,EAAAA;AAAD,IAAeP,IAAI,CAACkB,OAA1B;AACP,eAAelB,IAAI,CAACmB,OAApB","sourcesContent":["import {createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport sendReq from '../helper/sendReqToServer';\r\n\r\nexport const upLoadFile = createAsyncThunk(\r\n    \"localhost:4000/upload\",\r\n    async (data, thunkAPI) => {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"file\",\r\n            data,\r\n            data.name\r\n          );\r\n        const configReq = {\r\n            method: 'post',\r\n            url: '/upload',\r\n            header: {},\r\n            data: data\r\n        }\r\n        const res = await sendReq(configReq);\r\n        return res.data;\r\n    }\r\n)\r\n\r\nexport const downLoadFile = createAsyncThunk(\r\n    \"localhost:4000/download\",\r\n    async (configReq, thunkAPI) => {\r\n        const res = await sendReq(configReq);\r\n        return res.data;\r\n    }\r\n)\r\n\r\nconst file = createSlice({\r\n    name: \"file\",\r\n    initialState: {\r\n        file: null,\r\n        message: {\r\n            type: null,\r\n            mess: null\r\n        },\r\n        isLoading: false\r\n    },\r\n    reducers: {\r\n        setMessage : (state, action) => {\r\n            state.message = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(upLoadFile.pending, (state, action) => {\r\n            state.isLoading = true\r\n        })\r\n        builder.addCase(upLoadFile.fulfilled, (state, action) => {\r\n            state.message = action.payload.message\r\n            state.isLoading = false\r\n            console.log(state.message)\r\n        })\r\n        builder.addCase(downLoadFile.pending, (state, action) => {\r\n            state.isLoading = true\r\n        })\r\n        builder.addCase(downLoadFile.fulfilled, (state, action) => {\r\n            state.file = action.payload.file\r\n            state.message = action.payload.message\r\n            state.isLoading = false\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setMessage} = file.actions;\r\nexport default file.reducer;"]},"metadata":{},"sourceType":"module"}