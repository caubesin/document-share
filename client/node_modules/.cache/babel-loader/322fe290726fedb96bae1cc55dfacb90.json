{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn_ReactJS\\\\document-share\\\\client\\\\src\\\\route\\\\private_route.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const auth = useSelector(state => state.authenticate.auth.isAuthenticated);\n  const location = useLocation();\n  console.log(auth);\n\n  if (auth) {\n    return children;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/signin${path}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(PrivateRoute, \"D7sTyOGpvmPuHpCJes2+Mfav6ZE=\", false, function () {\n  return [useSelector, useLocation];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Learn_ReactJS/document-share/client/src/route/private_route.js"],"names":["React","useSelector","Navigate","useLocation","PrivateRoute","children","auth","state","authenticate","isAuthenticated","location","console","log","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;;;AAEA,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACjC,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBF,IAAnB,CAAwBG,eAAlC,CAAxB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,MAAGA,IAAH,EAAS;AACL,WAAOD,QAAP;AACH,GAFD,MAGK;AACD,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,UAASQ,IAAK;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAVD;;GAAMT,Y;UACWH,W,EACIE,W;;;KAFfC,Y;AAYN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({children}) => {\r\n    const auth = useSelector(state => state.authenticate.auth.isAuthenticated);\r\n    const location = useLocation();\r\n    console.log(auth)\r\n    if(auth) {\r\n        return children;\r\n    }\r\n    else {\r\n        return(<Navigate to={`/signin${path}`} />)\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}